{\rtf1\ansi\ansicpg1252\cocoartf2709
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica-Bold;\f1\fswiss\fcharset0 Helvetica;\f2\froman\fcharset0 Times-Roman;
\f3\froman\fcharset0 Times-Bold;}
{\colortbl;\red255\green255\blue255;\red47\green54\blue60;\red233\green238\blue239;\red0\green0\blue0;
\red255\green255\blue255;\red43\green149\blue222;}
{\*\expandedcolortbl;;\cssrgb\c23922\c27451\c30196;\cssrgb\c92941\c94510\c94902;\cssrgb\c0\c0\c0;
\cssrgb\c100000\c100000\c100000;\cssrgb\c19608\c65490\c89804;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{none\}}{\leveltext\leveltemplateid1\'00;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\b\fs38\fsmilli19100 \AppleTypeServices\AppleTypeServicesF65539 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Para saber m\'e1s: \'bfPUT o PATCH?
\fs37\fsmilli18900 \AppleTypeServices\AppleTypeServicesF65539 \cb1 \
\pard\pardeftab720\qc\partightenfactor0

\f1\b0\fs28 \AppleTypeServices \cf0 \strokec4 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0
\f0\b\fs19\fsmilli9900 \AppleTypeServices\AppleTypeServicesF65539 \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\pard\pardeftab720\partightenfactor0

\fs25\fsmilli12600 \AppleTypeServices \cf5 \cb6 \strokec5 \
\pard\pardeftab720\partightenfactor0

\f2\b0\fs36 \cf2 \cb1 \strokec2 Elegir entre el m\'e9todo HTTP PUT o PATCH es una pregunta com\'fan que surge cuando estamos desarrollando APIs y necesitamos crear un endpoint para la actualizaci\'f3n de recursos. Comprendamos las diferencias entre las dos opciones y cu\'e1ndo usar cada una.\
\pard\pardeftab720\partightenfactor0

\f0\b\fs45 \AppleTypeServices\AppleTypeServicesF65539 \cf2 PUT\
\pard\pardeftab720\sa540\partightenfactor0

\f2\b0\fs36 \AppleTypeServices \cf2 El m\'e9todo PUT reemplaza todos los datos actuales de un recurso con los datos enviados en la solicitud, es decir, estamos hablando de una actualizaci\'f3n completa. Entonces, con \'e9l, hacemos la actualizaci\'f3n completa de un recurso en una sola solicitud.\
\pard\pardeftab720\partightenfactor0

\f0\b\fs45 \AppleTypeServices\AppleTypeServicesF65539 \cf2 PATCH\
\pard\pardeftab720\sa540\partightenfactor0

\f2\b0\fs36 \AppleTypeServices \cf2 El m\'e9todo PATCH, a su vez, aplica modificaciones\'a0
\f3\b parciales
\f2\b0 \'a0a un recurso. Por lo tanto, es posible modificar solo una parte de un recurso. Con PATCH, entonces, realizamos actualizaciones parciales, lo que flexibiliza las opciones de actualizaci\'f3n.\
\pard\pardeftab720\partightenfactor0

\f0\b\fs45 \AppleTypeServices\AppleTypeServicesF65539 \cf2 \'bfCu\'e1l elegir?\
\pard\pardeftab720\sa540\partightenfactor0

\f2\b0\fs36 \AppleTypeServices \cf2 En la pr\'e1ctica, es dif\'edcil saber qu\'e9 m\'e9todo usar, porque no siempre sabremos si un recurso se actualizar\'e1 parcial o completamente en una solicitud, a menos que lo verifiquemos, algo que no se recomienda.\
Entonces, lo m\'e1s com\'fan en las aplicaciones es usar el m\'e9todo PUT para las solicitudes de actualizaci\'f3n de recursos en una API, que es nuestra elecci\'f3n en el proyecto utilizado a lo largo de este curso.\
}