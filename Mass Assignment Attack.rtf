{\rtf1\ansi\ansicpg1252\cocoartf2709
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica-Bold;\f1\fswiss\fcharset0 Helvetica;\f2\froman\fcharset0 Times-BoldItalic;
\f3\froman\fcharset0 Times-Roman;\f4\fmodern\fcharset0 Courier;\f5\fnil\fcharset0 HelveticaNeue-Bold;
}
{\colortbl;\red255\green255\blue255;\red47\green54\blue60;\red233\green238\blue239;\red0\green0\blue0;
\red255\green255\blue255;\red43\green149\blue222;\red7\green68\blue184;\red236\green240\blue242;\red203\green35\blue57;
\red91\green40\blue180;\red179\green179\blue179;\red87\green96\blue106;}
{\*\expandedcolortbl;;\cssrgb\c23922\c27451\c30196;\cssrgb\c92941\c94510\c94902;\cssrgb\c0\c0\c0;
\cssrgb\c100000\c100000\c100000;\cssrgb\c19608\c65490\c89804;\cssrgb\c0\c36078\c77255;\cssrgb\c94118\c95294\c96078;\cssrgb\c84314\c22745\c28627;
\cssrgb\c43529\c25882\c75686;\cssrgb\c75294\c75294\c75294;\cssrgb\c41569\c45098\c49020;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{none\}}{\leveltext\leveltemplateid1\'00;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\b\fs38\fsmilli19100 \AppleTypeServices\AppleTypeServicesF65539 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Para saber m\'e1s: Mass Assignment Attack
\fs37\fsmilli18900 \AppleTypeServices\AppleTypeServicesF65539 \cb1 \
\pard\pardeftab720\qc\partightenfactor0

\f1\b0\fs28 \AppleTypeServices \cf0 \strokec4 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0
\f0\b\fs19\fsmilli9900 \AppleTypeServices\AppleTypeServicesF65539 \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\pard\pardeftab720\partightenfactor0

\fs25\fsmilli12600 \AppleTypeServices \cf5 \cb6 \strokec5 \
\pard\pardeftab720\partightenfactor0

\f2\i\fs36 \cf2 \cb1 \strokec2 Mass Assignment Attack
\f3\i0\b0 \'a0o Ataque de asignaci\'f3n masiva, en espa\'f1ol, ocurre cuando un usuario logra inicializar o reemplazar par\'e1metros que no deben ser modificados en la aplicaci\'f3n. Al incluir par\'e1metros adicionales en una solicitud, si dichos par\'e1metros son v\'e1lidos, un usuario malintencionado puede generar un efecto secundario no deseado en la aplicaci\'f3n.\
\pard\pardeftab720\sa540\partightenfactor0
\cf2 El concepto de este ataque se refiere a cuando inyectas un conjunto de valores directamente en un objeto, de ah\'ed la asignaci\'f3n masiva de nombres, que sin la debida validaci\'f3n puede causar serios problemas.\
Tomemos un ejemplo pr\'e1ctico. Suponga que tiene el siguiente m\'e9todo, en una clase Controller, utilizado para registrar un usuario en la aplicaci\'f3n:\
\pard\pardeftab720\partightenfactor0

\f4 \cf7 \cb8 \strokec7 @PostMapping\cf2 \strokec2 \
\cf7 \strokec7 @Transactional\cf2 \strokec2 \
\pard\pardeftab720\partightenfactor0
\cf9 \strokec9 public\cf2 \strokec2  \cf9 \strokec9 void\cf2 \strokec2  \cf10 \strokec10 registrar\cf2 \strokec2 (\cf7 \strokec7 @RequestBody\cf2 \strokec2  \cf7 \strokec7 @Valid\cf2 \strokec2  Usuario usuario) \{\
    repository.save(usuario);\
\}
\f5\b\fs22 \cf6 \cb11 \strokec6 \
\pard\pardeftab720\qc\partightenfactor0
\cf6 COPIA EL C\'d3DIGO\
\pard\pardeftab720\sa540\partightenfactor0

\f3\b0\fs36 \cf2 \cb1 \strokec2 Y la entidad JPA que representa al usuario:\
\pard\pardeftab720\partightenfactor0

\f4 \cf7 \cb8 \strokec7 @Getter\cf2 \strokec2 \
\cf7 \strokec7 @Setter\cf2 \strokec2 \
\cf7 \strokec7 @NoArgsConstructor\cf2 \strokec2 \
\cf7 \strokec7 @EqualsAndHashCode(of = "id")\cf2 \strokec2 \
\cf7 \strokec7 @Entity(name = "Usuario")\cf2 \strokec2 \
\cf7 \strokec7 @Table(name = "usuarios")\cf2 \strokec2 \
\pard\pardeftab720\partightenfactor0
\cf9 \strokec9 public\cf2 \strokec2  \cf9 \strokec9 class\cf2 \strokec2  \cf10 \strokec10 Usuario\cf2 \strokec2  \{\
\
    \cf7 \strokec7 @Id\cf2 \strokec2 \
    \cf7 \strokec7 @GeneratedValue(strategy = GenerationType.IDENTITY)\cf2 \strokec2 \
    \cf9 \strokec9 private\cf2 \strokec2  Long id;\
    \cf9 \strokec9 private\cf2 \strokec2  String nombre;\
    \cf9 \strokec9 private\cf2 \strokec2  String email;\
    \cf9 \strokec9 private\cf2 \strokec2  \cf9 \strokec9 Boolean\cf2 \strokec2  \cf7 \strokec7 admin\cf2 \strokec2  \cf7 \strokec7 =\cf2 \strokec2  \cf7 \strokec7 false\cf2 \strokec2 ;\
\
    \cf12 \strokec12 //restante del c\'f3digo omitido\'85\cf2 \strokec2 \
\}
\f5\b\fs22 \cf6 \cb11 \strokec6 \
\pard\pardeftab720\qc\partightenfactor0
\cf6 COPIA EL C\'d3DIGO\
\pard\pardeftab720\sa540\partightenfactor0

\f3\b0\fs36 \cf2 \cb1 \strokec2 Observe que el atributo\'a0
\f4\fs30\fsmilli15300 \cb8 admin
\f3\fs36 \cb1 \'a0de la clase\'a0
\f4\fs30\fsmilli15300 \cb8 Usuario
\f3\fs36 \cb1 \'a0se inicializa como\'a0
\f4\fs30\fsmilli15300 \cb8 falso
\f3\fs36 \cb1 , lo que indica que un usuario siempre debe estar registrado como administrador. Sin embargo, si se env\'eda el siguiente JSON en la solicitud:\
\pard\pardeftab720\partightenfactor0

\f4 \cf2 \cb8 \{\
    \'93nombre\'94 : \'93Rodrigo\'94,\
    \'93email\'94 : \'93rodrigo\cf7 \strokec7 @email\cf2 \strokec2 .com\'94,\
    \'93admin\'94 : \cf7 \strokec7 true\cf2 \strokec2 \
\}
\f5\b\fs22 \cf6 \cb11 \strokec6 \
\pard\pardeftab720\qc\partightenfactor0
\cf6 COPIA EL C\'d3DIGO\
\pard\pardeftab720\sa540\partightenfactor0

\f3\b0\fs36 \cf2 \cb1 \strokec2 El usuario se registrar\'e1 con el atributo\'a0
\f4\fs30\fsmilli15300 \cb8 admin
\f3\fs36 \cb1 \'a0con valor\'a0
\f4\fs30\fsmilli15300 \cb8 true
\f3\fs36 \cb1 . Esto sucede porque el atributo\'a0
\f4\fs30\fsmilli15300 \cb8 admin
\f3\fs36 \cb1 \'a0enviado en el JSON existe en la clase que se est\'e1 recibiendo en el Controller, consider\'e1ndose un atributo v\'e1lido y que se llenar\'e1 en el objeto\'a0
\f4\fs30\fsmilli15300 \cb8 Usuario
\f3\fs36 \cb1 \'a0que ser\'e1 instanciado por Spring.\
Entonces, \'bfc\'f3mo prevenimos este problema?\
\pard\pardeftab720\partightenfactor0

\f0\b\fs45 \AppleTypeServices\AppleTypeServicesF65539 \cf2 Prevenci\'f3n\
\pard\pardeftab720\sa540\partightenfactor0

\f3\b0\fs36 \AppleTypeServices \cf2 El uso del patr\'f3n DTO nos ayuda a evitar este problema, ya que al crear un DTO definimos solo los campos que se pueden recibir en la API, y en el ejemplo anterior el DTO no tendr\'eda el atributo\'a0
\f4\fs30\fsmilli15300 \cb8 admin
\f3\fs36 \cb1 .\
Nuevamente, vemos una ventaja m\'e1s de usar el patr\'f3n DTO para representar los datos que entran y salen de la API.\
}